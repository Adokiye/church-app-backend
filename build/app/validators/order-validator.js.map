{"version":3,"sources":["../../../src/app/validators/order-validator.js"],"names":["meal","Joi","object","keys","name","string","required","id","quantity","number","addons","array","items","OrderValidator","calculateOrder","body","meals","cokitchen_polygon_id","address","discount_code","lat","lng","updateCalculatedOrder","createOrder","calculated_order_id","order_type_id","use_wallet","bool","order_details","rider_note","order_note"],"mappings":";;;;;;;;;AAAA;;AAEA;;AAEA,IAAIA,IAAI,GAAGC,gBAAIC,MAAJ,GAAaC,IAAb,CAAkB;AAC3BC,EAAAA,IAAI,EAAEH,gBAAII,MAAJ,GAAaC,QAAb,EADqB;AAE3BC,EAAAA,EAAE,EAAEN,gBAAII,MAAJ,GAAaC,QAAb,EAFuB;AAG3BE,EAAAA,QAAQ,EAAEP,gBAAIQ,MAAJ,GAAaH,QAAb,EAHiB;AAI3BI,EAAAA,MAAM,EAAET,gBAAIU,KAAJ,GAAYC,KAAZ,CACNX,gBAAIC,MAAJ,GAAaC,IAAb,CAAkB;AAChBC,IAAAA,IAAI,EAAEH,gBAAII,MAAJ,GAAaC,QAAb,EADU;AAEhBC,IAAAA,EAAE,EAAEN,gBAAII,MAAJ,GAAaC,QAAb,EAFY;AAGhBE,IAAAA,QAAQ,EAAEP,gBAAIQ,MAAJ,GAAaH,QAAb;AAHM,GAAlB,CADM;AAJmB,CAAlB,CAAX;;AAaA,IAAMO,cAAc,GAAG;AACrBC,EAAAA,cAAc,EAAE;AAAA,WACd,uCAAqB;AACnBC,MAAAA,IAAI,EAAE;AACJC,QAAAA,KAAK,EAAEf,gBAAIU,KAAJ,GAAYC,KAAZ,CAAkBZ,IAAlB,EAAwBM,QAAxB,EADH;AAEJW,QAAAA,oBAAoB,EAAEhB,gBAAII,MAAJ,GAAaC,QAAb,EAFlB;AAGJY,QAAAA,OAAO,EAAEjB,gBAAII,MAAJ,GAAaC,QAAb,EAHL;AAIJa,QAAAA,aAAa,EAAElB,gBAAII,MAAJ,EAJX;AAKJe,QAAAA,GAAG,EAAEnB,gBAAII,MAAJ,GAAaC,QAAb,EALD;AAMJe,QAAAA,GAAG,EAAEpB,gBAAII,MAAJ,GAAaC,QAAb;AAND;AADa,KAArB,CADc;AAAA,GADK;AAYrBgB,EAAAA,qBAAqB,EAAE;AAAA,WACrB,uCAAqB;AACnBP,MAAAA,IAAI,EAAE;AACJC,QAAAA,KAAK,EAAEf,gBAAIU,KAAJ,GAAYC,KAAZ,CAAkBZ,IAAlB,CADH;AAEJiB,QAAAA,oBAAoB,EAAEhB,gBAAII,MAAJ,EAFlB;AAGJa,QAAAA,OAAO,EAAEjB,gBAAII,MAAJ,EAHL;AAIJc,QAAAA,aAAa,EAAElB,gBAAII,MAAJ,EAJX;AAKJe,QAAAA,GAAG,EAAEnB,gBAAII,MAAJ,EALD;AAMJgB,QAAAA,GAAG,EAAEpB,gBAAII,MAAJ;AAND;AADa,KAArB,CADqB;AAAA,GAZF;AAuBnBkB,EAAAA,WAAW,EAAE;AAAA,WACb,uCAAqB;AACnBR,MAAAA,IAAI,EAAE;AACJS,QAAAA,mBAAmB,EAAEvB,gBAAII,MAAJ,GAAaC,QAAb,EADjB;AAEJmB,QAAAA,aAAa,EAAExB,gBAAII,MAAJ,GAAaC,QAAb,EAFX;AAGJoB,QAAAA,UAAU,EAAEzB,gBAAI0B,IAAJ,EAHR;AAIJC,QAAAA,aAAa,EAAI3B,gBAAIC,MAAJ,GAAaC,IAAb,CAAkB;AACjC0B,UAAAA,UAAU,EAAE5B,gBAAII,MAAJ,GAAaC,QAAb,EADqB;AAEjCwB,UAAAA,UAAU,EAAE7B,gBAAII,MAAJ,GAAaC,QAAb;AAFqB,SAAlB;AAJb;AADa,KAArB,CADa;AAAA;AAvBM,CAAvB;eAqCeO,c","sourcesContent":["import Joi from '@hapi/joi'\n\nimport { validationMiddleware } from '../middlewares'\n\nlet meal = Joi.object().keys({\n  name: Joi.string().required(),\n  id: Joi.string().required(),\n  quantity: Joi.number().required(),\n  addons: Joi.array().items(\n    Joi.object().keys({\n      name: Joi.string().required(),\n      id: Joi.string().required(),\n      quantity: Joi.number().required()\n    })\n  )\n})\n\nconst OrderValidator = {\n  calculateOrder: () =>\n    validationMiddleware({\n      body: {\n        meals: Joi.array().items(meal).required(),\n        cokitchen_polygon_id: Joi.string().required(),\n        address: Joi.string().required(),\n        discount_code: Joi.string(),\n        lat: Joi.string().required(),\n        lng: Joi.string().required()\n      }\n    }),\n  updateCalculatedOrder: () =>\n    validationMiddleware({\n      body: {\n        meals: Joi.array().items(meal),\n        cokitchen_polygon_id: Joi.string(),\n        address: Joi.string(),\n        discount_code: Joi.string(),\n        lat: Joi.string(),\n        lng: Joi.string()\n      }\n    }),\n    createOrder: () =>\n    validationMiddleware({\n      body: {\n        calculated_order_id: Joi.string().required(),\n        order_type_id: Joi.string().required(),\n        use_wallet: Joi.bool(),\n        order_details:   Joi.object().keys({\n          rider_note: Joi.string().required(),\n          order_note: Joi.string().required(),\n        })\n      }\n    })\n}\n\nexport default OrderValidator\n"],"file":"order-validator.js"}