{"version":3,"sources":["../../../src/app/validators/user-validator.js"],"names":["UserValidator","send_otp","body","phone_number","Joi","string","min","max","required","action","create","otp","login","email","password","verifyUser","user_id","createMarketingStaff","first_name","last_name","other_name","dob","gender","valid","pattern","RegExp","message","update","date"],"mappings":"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","sourcesContent":["import Joi from '@hapi/joi'\n\nimport { validationMiddleware } from '../middlewares'\n\nconst UserValidator = {\n  send_otp: () =>\n  validationMiddleware({\n    body: {\n      phone_number: Joi.string().min(11).max(11).required(),\n      action: Joi.string().required()\n    }\n  }),\n  create: () =>\n    validationMiddleware({\n      body: {\n        phone_number: Joi.string().min(11).max(11).required(),\n        otp: Joi.string().required(),\n        action: Joi.string().required(),\n\n      }\n    }),\n  login: () =>\n    validationMiddleware({\n      body: {\n        email: Joi.string().email().required(),\n        password: Joi.string().min(1).required()\n      }\n    }),\n  verifyUser: () =>\n    validationMiddleware({\n      body: {\n        user_id: Joi.string().required(),\n        phone_number: Joi.string().min(11).max(11).required(),\n        otp: Joi.string().required()\n      }\n    }),\n  createMarketingStaff: () =>\n    validationMiddleware({\n      body: {\n        first_name: Joi.string().required(),\n        last_name: Joi.string().required(),\n        other_name: Joi.string(),\n        dob: Joi.string(),\n        gender: Joi.string().valid('male', 'female'),\n        email: Joi.string().email().required(),\n        password: Joi.string()\n          .pattern(new RegExp('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{8,}$'))\n          .message(\n            'Password must contain minimun 8 characters, at least 1 UPPERCASE letter, at least 1 lowercase letter and at least 1 digit'\n          )\n          .required(),\n        phone_number: Joi.string().min(11).max(11).required()\n      }\n    }),\n  update: () =>\n    validationMiddleware({\n      body: {\n        first_name: Joi.string(),\n        last_name: Joi.string(),\n        other_name: Joi.string(),\n        dob: Joi.date(),\n        gender: Joi.string().valid('male', 'female'),\n        email: Joi.string().email(),\n        password: Joi.string()\n          .pattern(new RegExp('^(?=.*?[A-Z])(?=.*?[a-z])(?=.*?[0-9]).{8,}$'))\n          .message(\n            'Password must contain minimun 8 characters, at least 1 UPPERCASE letter, at least 1 lowercase letter and at least 1 digit'\n          )\n      }\n    })\n}\n\nexport default UserValidator\n"],"file":"user-validator.js"}