{"version":3,"sources":["../../../src/app/services/UserService.js"],"names":["newCustomerService","phone_number","Promise","all","User","query","insert","role","active","user","FreeDelivery","user_id","id","UserSetting","ReferralCode","code","toUpperCase","free_delivery","user_setting","referral_code","updateNewUserService","personal_details","password","patchAndFetchById","user_data"],"mappings":";;;;;;;;;;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;AACA;;AAEA;;AAEO,IAAMA,kBAAkB;AAAA,2FAAG,iBAAMC,YAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACXC,OAAO,CAACC,GAAR,CAAY,CAC/BC,iBAAKC,KAAL,GACGC,MADH,CACU;AACNL,cAAAA,YAAY,EAAZA,YADM;AAENM,cAAAA,IAAI,EAAE,UAFA;AAGNC,cAAAA,MAAM,EAAE;AAHF,aADV,CAD+B,CAAZ,CADW;;AAAA;AAAA;AAAA;AACzBC,YAAAA,IADyB;AAAA;AAAA,mBAU2BP,OAAO,CAACC,GAAR,CAAY,CACrEO,0BAAaL,KAAb,GAAqBC,MAArB,CAA4B;AAC1BK,cAAAA,OAAO,EAAEF,IAAI,CAACG;AADY,aAA5B,CADqE,EAIrEC,yBAAYR,KAAZ,GAAoBC,MAApB,CAA2B;AACzBK,cAAAA,OAAO,EAAEF,IAAI,CAACG;AADW,aAA3B,CAJqE,EAOrEE,0BAAaT,KAAb,GAAqBC,MAArB,CAA4B;AAC1BK,cAAAA,OAAO,EAAEF,IAAI,CAACG,EADY;AAE1BG,cAAAA,IAAI,EAAE,uBAAS,CAAT,EAAYC,WAAZ;AAFoB,aAA5B,CAPqE,CAAZ,CAV3B;;AAAA;AAAA;AAAA;AAUzBC,YAAAA,aAVyB;AAUVC,YAAAA,YAVU;AAUIC,YAAAA,aAVJ;AAAA,6CAuBzB;AACLV,cAAAA,IAAI,EAAJA;AADK,aAvByB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAlBT,kBAAkB;AAAA;AAAA;AAAA,GAAxB;;;;AA4BA,IAAMoB,oBAAoB;AAAA,4FAAG,kBAAOC,gBAAP,EAAyBZ,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBAE9BY,gBAAgB,CAACC,QAFa;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAGE,8BAAgBD,gBAAgB,CAACC,QAAjC,CAHF;;AAAA;AAGhCD,YAAAA,gBAAgB,CAACC,QAHe;;AAAA;AAAA;AAAA,mBAKVlB,iBAAKC,KAAL,GACrBkB,iBADqB,CACHd,IAAI,CAACG,EADF,EACMS,gBADN,CALU;;AAAA;AAK5BG,YAAAA,SAL4B;AAAA,8CAS3B;AACLA,cAAAA,SAAS,EAATA;AADK,aAT2B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAApBJ,oBAAoB;AAAA;AAAA;AAAA,GAA1B;;;eAcQ;AACbpB,EAAAA,kBAAkB,EAAlBA,kBADa;AAEboB,EAAAA,oBAAoB,EAApBA;AAFa,C","sourcesContent":["import { transaction } from 'objection'\n\nimport User from '../models/user'\nimport Role from '../models/role'\nimport FreeDelivery from '../models/free_delivery'\nimport UserSetting from '../models/user_setting'\nimport ReferralCode from '../models/referral_code'\n\nimport { encryptPassword, makeCode } from '../helpers'\n\nexport const newCustomerService = async phone_number => {\n  const [user] = await Promise.all([\n    User.query()\n      .insert({\n        phone_number,\n        role: 'CUSTOMER',\n        active: true\n      })\n  ])\n\n  const [free_delivery, user_setting, referral_code] = await Promise.all([\n    FreeDelivery.query().insert({\n      user_id: user.id\n    }),\n    UserSetting.query().insert({\n      user_id: user.id\n    }),\n    ReferralCode.query().insert({\n      user_id: user.id,\n      code: makeCode(6).toUpperCase()\n    })\n  ])\n\n  return {\n    user\n  }\n}\n\nexport const updateNewUserService = async (personal_details, user) => {\n  //  clean up data\n  if (personal_details.password) {\n    personal_details.password = await encryptPassword(personal_details.password)\n  }\n  const user_data = await User.query()\n    .patchAndFetchById(user.id, personal_details)\n    \n\n  return {\n    user_data\n  }\n}\n\nexport default {\n  newCustomerService,\n  updateNewUserService\n}\n"],"file":"UserService.js"}