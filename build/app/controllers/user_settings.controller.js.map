{"version":3,"sources":["../../../src/app/controllers/user_settings.controller.js"],"names":["getUserSettings","ctx","user","state","UserSetting","query","findOne","user_id","id","user_settings_data","status","message","updateUserSettings","body","request","user_settings_id","patchAndFetchById","e","console","log","getSavedAddress","UserSavedAddress","where","user_saved_address_data","data","createNewAddress","name","toLowerCase","insert","updateAddress","user_saved_address_id","deleteAddress","params","deleteById"],"mappings":"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","sourcesContent":["import UserSetting from '../models/user_setting'\nimport UserSavedAddress from '../models/user_saved_address'\nimport { Unauthorized, UnprocessableEntity, NotFound } from '../helpers'\n\nexport const getUserSettings = async ctx => {\n  const { user } = ctx.state.user\n\n  const user_settings_data = await UserSetting.query()\n    .findOne({\n      user_id: user.id\n    })\n    .catch(() => false)\n  if (!user_settings_data) {\n    throw Unauthorized('User not found. Please sign up')\n  } else {\n    return {\n      status: 'success',\n      message: \"User's Settings data returned Successfully\",\n      ...user_settings_data\n    }\n  }\n}\n\nexport const updateUserSettings = async ctx => {\n  const { user } = ctx.state.user\n  const { body } = ctx.request\n  const user_settings_id = body.user_settings_id\n  delete body.user_settings_id\n  const user_settings_data = await UserSetting.query()\n    .patchAndFetchById(user_settings_id, body)\n    .catch(e => {\n      console.log(e)\n      return false\n    })\n  if (!user_settings_data) {\n    throw NotFound('User Settings data not found.')\n  } else {\n    return {\n      status: 'success',\n      message: \"User's Settings data updated Successfully\",\n      ...user_settings_data\n    }\n  }\n}\n\n// user address setting save\nexport const getSavedAddress = async ctx => {\n  const { user } = ctx.state.user\n\n  const user_saved_address_data = await UserSavedAddress.query()\n    .where({\n      user_id: user.id\n    })\n    .catch(() => false)\n  if (!user_saved_address_data) {\n    throw Unauthorized('User not found. Please sign up')\n  } else {\n    return {\n      status: 'success',\n      message: \"User's Saved address data returned Successfully\",\n      data: user_saved_address_data\n    }\n  }\n}\n\nexport const createNewAddress = async ctx => {\n  const { user } = ctx.state.user\n  const { body } = ctx.request\n  let name = body.name.toLowerCase()\n  delete body.name\n  let user_saved_address_data = await UserSavedAddress.query()\n    .findOne({\n      user_id: user.id,\n      name\n    })\n    .catch((e) => {console.log(e);false})\n\n  if (user_saved_address_data) {\n    throw UnprocessableEntity('Address name already exists for ' + name)\n  } else {\n    user_saved_address_data = await UserSavedAddress.query()\n      .insert({\n        user_id: user.id,\n        name,\n        ...body\n      })\n      .catch(() => {\n        throw UnprocessableEntity('Invalid body')\n      })\n      return {\n        status: 'success',\n        message: \"User's Address created Successfully\",\n        ...user_saved_address_data\n      }\n  }\n}\n\nexport const updateAddress = async ctx => {\n  const { user } = ctx.state.user\n  const { body } = ctx.request\n  body.user_id = user.id\n  const user_saved_address_data = await UserSavedAddress.query()\n    .patchAndFetchById(body.user_saved_address_id, body)\n    .catch(() => false)\n\n  if (!user_saved_address_data) {\n    throw Unauthorized('User Saved address data not found.')\n  } else {\n    return {\n      status: 'success',\n      message: \"User's Saved Address data updated Successfully\",\n      ...user_saved_address_data\n    }\n  }\n}\n\nexport const deleteAddress = async ctx => {\n  const { user } = ctx.state.user\n  const { params } = ctx\n  const user_saved_address_data = await UserSavedAddress.query()\n    .deleteById(params.id)\n    .catch(() => {\n      throw NotFound('User saved address with id '+params.id+' not found')\n    })\n    return {\n      status: 'success',\n      message: 'User saved address Deleted Successfully',\n    }\n}\n"],"file":"user_settings.controller.js"}