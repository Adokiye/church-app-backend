{"version":3,"sources":["../../../src/app/controllers/meal.controller.js"],"names":["updateMeal","ctx","body","request","role","state","user","meal_id","Meal","query","patchAndFetchById","withGraphFetched","e","console","log","meal_data","status","message","getMeals","meals_data","data"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;;;AAEO,IAAMA,UAAU;AAAA,2FAAG,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBC,YAAAA,IADgB,GACPD,GAAG,CAACE,OADG,CAChBD,IADgB;AAEhBE,YAAAA,IAFgB,GAEPH,GAAG,CAACI,KAAJ,CAAUC,IAAV,CAAeA,IAFR,CAEhBF,IAFgB;AAGpBG,YAAAA,OAHoB,GAGVL,IAAI,CAACK,OAHK;AAIxB,mBAAOL,IAAI,CAACK,OAAZ;AAJwB;AAAA,mBAKd,mCAAiBH,IAAjB,CALc;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAMQI,iBAAKC,KAAL,GAC3BC,iBAD2B,CACTH,OADS,EACAL,IADA,EAE3BS,gBAF2B,CAEV,4BAFU,WAGrB,UAAAC,CAAC,EAAI;AACVC,cAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,oBAAM,kCAAoB,cAApB,CAAN;AACD,aAN2B,CANR;;AAAA;AAMhBG,YAAAA,SANgB;AAAA;AAcpBC,cAAAA,MAAM,EAAE,SAdY;AAepBC,cAAAA,OAAO,EAAE;AAfW,eAgBjBF,SAhBiB;;AAAA;AAAA,kBAmBhB,2BAAa,cAAb,CAnBgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAVf,UAAU;AAAA;AAAA;AAAA,GAAhB;;;;AAuBA,IAAMkB,QAAQ;AAAA,4FAAG,kBAAMjB,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACSO,iBAAKC,KAAL,GAC5BE,gBAD4B,CACX,sDADW,WAEtB,UAAAC,CAAC,EAAI;AACVC,cAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACA,qBAAO,EAAP;AACD,aAL4B,CADT;;AAAA;AAChBO,YAAAA,UADgB;AAAA,8CAOf;AACLH,cAAAA,MAAM,EAAE,SADH;AAELC,cAAAA,OAAO,EAAE,6BAFJ;AAGLG,cAAAA,IAAI,EAAED;AAHD,aAPe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAARD,QAAQ;AAAA;AAAA;AAAA,GAAd","sourcesContent":["import MealCategory from '../models/meal_category'\nimport Meal from '../models/meal'\nimport MealCategorySelectionType from '../models/meal_category_selection_type'\nimport User from '../models/user'\nimport { checkIfMarketing } from '../services/RoleService'\nimport { Unauthorized, UnprocessableEntity, NotFound } from '../helpers'\n\nexport const updateMeal = async ctx => {\n  const { body } = ctx.request\n  const { role } = ctx.state.user.user\n  let meal_id = body.meal_id\n  delete body.meal_id\n  if (await checkIfMarketing(role)) {\n    const meal_data = await await Meal.query()\n      .patchAndFetchById(meal_id, body)\n      .withGraphFetched('[brand,addons.[meal_data]]')\n      .catch(e => {\n        console.log(e)\n        throw UnprocessableEntity('Invalid Body')\n      })\n    return {\n      status: 'success',\n      message: 'Meal updated Successfully',\n      ...meal_data\n    }\n  } else {\n    throw Unauthorized('Unauthorized')\n  }\n}\n\nexport const getMeals = async ctx => {\n  const meals_data = await await Meal.query()\n    .withGraphFetched('[addons.[meal_data],meal_category,brand.[cokitchen]]')\n    .catch(e => {\n      console.log(e)\n      return []\n    })\n  return {\n    status: 'success',\n    message: 'Meals returned Successfully',\n    data: meals_data\n  }\n}\n"],"file":"meal.controller.js"}