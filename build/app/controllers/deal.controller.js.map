{"version":3,"sources":["../../../src/app/controllers/deal.controller.js"],"names":["createDeal","ctx","body","request","role","state","user","name","DealType","query","findById","deal_type_id","deal_type_data","res","status","json","message","errors","deal_type","deals","i","len","brands","length","Brand","brand_data","brand_id","id","Deal","insert","withGraphFetched","deal_data","push","data","updateDeal","params","patchAndFetchById","getDealTypes","deal_types"],"mappings":"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","sourcesContent":["import Brand from '../models/brand'\nimport Deal from '../models/deal'\nimport DealType from '../models/deal_type'\nimport { checkIfAdmin, checkIfMarketing } from '../services/RoleService'\nimport { Unauthorized } from '../helpers'\n\nexport const createDeal = async ctx => {\n  const { body } = ctx.request\n  const { role } = ctx.state.user\n\n  if (checkIfMarketing(role.name)) {\n    const deal_type_data = await DealType.query().findById(body.deal_type_id).catch(() => false\n    );\n    if (!deal_type_data) {\n      return res.status(404).json({\n        status: 'error',\n        message: 'Not Found',\n        errors: {\n          deal_type: ['Deal type not found with that id']\n        }\n      })\n    }\n    if (deal_type_data.name === 'BRAND') {\n      var deals = []\n      var i = 0,\n        len = body.brands.length\n      while (i < len) {\n        const brand_data = await Brand.query().findById(body.brands[i]).catch(() => false\n        );\n        if (brand_data) {\n          body.brand_id = brand_data.id\n          const deal_data = await Deal.query()\n            .insert(body)\n            .withGraphFetched('[deal_type]')\n          deals.push(deal_data)\n        } else {\n          return res.status(404).json({\n            status: 'error',\n            message: 'Not Found',\n            errors: {\n              deal_type: ['Brand not found for ' + body.brands[i]]\n            }\n          })\n        }\n        i++\n      }\n      return {\n        status: 'success',\n        message: 'Creation Successful',\n        data: deals\n      }\n    } else {\n      const deal_data = await Deal.query()\n        .insert(body)\n        .withGraphFetched('[deal_type]')\n      return {\n        status: 'success',\n        message: 'Creation Successful',\n        data: deal_data\n      }\n    }\n  } else {\n    throw Unauthorized('Unauthorized')\n  }\n}\n\nexport const updateDeal = async ctx => {\n  const { id } = ctx.params\n  const { body } = ctx.request\n  const { role } = ctx.state.user\n\n  if (checkIfMarketing(role.name)) {\n    const deal_data = await Deal.query()\n      .patchAndFetchById(id, body)\n      .withGraphFetched('[deal_type]')\n    return {\n      status: 'success',\n      message: 'Update Successful',\n      ...deal_data\n    }\n  } else {\n    throw Unauthorized('Unauthorized')\n  }\n}\n\nexport const getDealTypes = async ctx => {\n  const { role } = ctx.state.user\n  if (checkIfMarketing(role.name)) {\n    const deal_types = DealType.query()\n    return {\n      status: 'success',\n      message: 'Successful',\n      data: deal_types\n    }\n  } else {\n    throw Unauthorized('Unauthorized')\n  }\n}\n"],"file":"deal.controller.js"}