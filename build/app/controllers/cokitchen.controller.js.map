{"version":3,"sources":["../../../src/app/controllers/cokitchen.controller.js"],"names":["updateCokitchen","ctx","id","params","body","request","role","state","user","posist_data","Cokitchen","query","patchAndFetchById","withGraphFetched","cokitchen_data","status","message","createCokitchenPolygon","CokitchenPolygon","insert","cokitchen_polygon_data","updateCokitchenPolygon","getAllCokitchens","cokitchens"],"mappings":"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","sourcesContent":["import Cokitchen from '../models/cokitchen'\nimport CokitchenPolygon from '../models/cokitchen_polygon'\nimport { checkIfAdmin, checkIfMarketing } from '../services/RoleService'\nimport { Unauthorized } from '../helpers'\n\nexport const updateCokitchen = async ctx => {\n  const { id } = ctx.params\n  const { body } = ctx.request\n  const { role } = ctx.state.user.user\n\n  if (checkIfMarketing(role)) {\n    if (body.posist_data) {\n      delete body.posist_data\n    }\n    const cokitchen_data = await Cokitchen.query()\n      .patchAndFetchById(id, body)\n      .withGraphFetched('[brands, cokitchen_polygon]')\n    return {\n      status: 'success',\n      message: 'Update Successful',\n      ...cokitchen_data\n    }\n  } else {\n    throw Unauthorized('Unauthorized Update')\n  }\n}\n\nexport const createCokitchenPolygon = async ctx => {\n  const { body } = ctx.request\n  const { id, role } = ctx.state.user.user\n\n  if (checkIfMarketing(role)) {\n    const cokitchen_polygon_data = await CokitchenPolygon.query()\n      .insert(body)\n      .withGraphFetched('[cokitchen]')\n    return {\n      status: 'success',\n      message: 'Update Successful',\n      ...cokitchen_polygon_data\n    }\n  } else {\n    throw Unauthorized('Unauthorized')\n  }\n}\n\nexport const updateCokitchenPolygon = async ctx => {\n  const { id } = ctx.params\n  const { body } = ctx.request\n  const { role } = ctx.state.user.user\n\n  if (checkIfMarketing(role)) {\n    const cokitchen_polygon_data = await CokitchenPolygon.query()\n      .patchAndFetchById(id, body)\n      .withGraphFetched('[cokitchen]')\n    return {\n      status: 'success',\n      message: 'Update Successful',\n      ...cokitchen_polygon_data\n    }\n  } else {\n    throw Unauthorized('Unauthorized Update')\n  }\n}\n\nexport const getAllCokitchens = async ctx => {\n  const cokitchens = await Cokitchen.query().withGraphFetched(\n    '[brands,cokitchen_polygons]'\n  )\n  return {\n    status: 'success',\n    cokitchens\n  }\n}\n"],"file":"cokitchen.controller.js"}