{"version":3,"sources":["../../../src/app/controllers/cokitchen.controller.js"],"names":["createCokitchen","ctx","id","params","body","request","role","state","user","posist_data","Cokitchen","query","insert","e","console","log","UnprocessableEntity","cokitchen_data","status","message","updateCokitchen","patchAndFetchById","withGraphFetched","createCokitchenPolygon","CokitchenPolygon","cokitchen_polygon_data","updateCokitchenPolygon","getAllCokitchens","cokitchens"],"mappings":"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","sourcesContent":["import Cokitchen from '../models/cokitchen'\nimport Meal from '../models/meal'\nimport CokitchenPolygon from '../models/cokitchen_polygon'\nimport { checkIfAdmin, checkIfMarketing } from '../services/RoleService'\nimport { Unauthorized } from '../helpers'\n\nexport const createCokitchen = async ctx => {\n  const { id } = ctx.params\n  const { body } = ctx.request\n  const { role } = ctx.state.user.user\n\n  if (await checkIfMarketing(role)) {\n    if (body.posist_data) {\n      delete body.posist_data\n    }\n    const cokitchen_data = await Cokitchen.query()\n      .insert(body)\n      .catch(e => {\n        console.log(e)\n        throw UnprocessableEntity('Invalid body')\n      })\n    return {\n      status: 'success',\n      message: 'Creation Successful',\n      ...cokitchen_data\n    }\n  } else {\n    throw Unauthorized('Unauthorized Creation')\n  }\n}\n\nexport const updateCokitchen = async ctx => {\n  const { id } = ctx.params\n  const { body } = ctx.request\n  const { role } = ctx.state.user.user\n\n  if (await checkIfMarketing(role)) {\n    if (body.posist_data) {\n      delete body.posist_data\n    }\n    const cokitchen_data = await Cokitchen.query()\n      .patchAndFetchById(id, body)\n      .withGraphFetched('[brands, cokitchen_polygon]')\n    return {\n      status: 'success',\n      message: 'Update Successful',\n      ...cokitchen_data\n    }\n  } else {\n    throw Unauthorized('Unauthorized Update')\n  }\n}\n\nexport const createCokitchenPolygon = async ctx => {\n  const { body } = ctx.request\n  const { id, role } = ctx.state.user.user\n\n  if (await checkIfMarketing(role)) {\n    const cokitchen_polygon_data = await CokitchenPolygon.query()\n      .insert(body)\n      .withGraphFetched('[cokitchen]')\n    return {\n      status: 'success',\n      message: 'Update Successful',\n      ...cokitchen_polygon_data\n    }\n  } else {\n    throw Unauthorized('Unauthorized')\n  }\n}\n\nexport const updateCokitchenPolygon = async ctx => {\n  const { id } = ctx.params\n  const { body } = ctx.request\n  const { role } = ctx.state.user.user\n\n  if (await checkIfMarketing(role)) {\n    const cokitchen_polygon_data = await CokitchenPolygon.query()\n      .patchAndFetchById(id, body)\n      .withGraphFetched('[cokitchen]')\n    return {\n      status: 'success',\n      message: 'Update Successful',\n      ...cokitchen_polygon_data\n    }\n  } else {\n    throw Unauthorized('Unauthorized Update')\n  }\n}\n\nexport const getAllCokitchens = async ctx => {\n  const cokitchens = await Cokitchen.query().withGraphFetched('brands')\n  return {\n    status: 'success',\n    cokitchens\n  }\n}\n"],"file":"cokitchen.controller.js"}