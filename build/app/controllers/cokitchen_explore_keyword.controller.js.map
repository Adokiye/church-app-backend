{"version":3,"sources":["../../../src/app/controllers/cokitchen_explore_keyword.controller.js"],"names":["createCokitchenExploreKeyword","ctx","body","request","role","state","user","MealKeyword","query","findOne","id","meal_keyword_id","e","meal_keyword_data","images","length","CokitchenExploreKeyword","cokitchen_id","console","log","cokitchen_explore_keyword_data","insert","status","message","getCokitchenExploreKeywords","withGraphFetched","cokitchen_explore_keywords","data","deleteCokitchenExploreKeyword","params","deleteById"],"mappings":"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","sourcesContent":["import CokitchenExploreKeyword from '../models/cokitchen_explore_keyword'\nimport MealKeyword from '../models/meal_keyword'\nimport User from '../models/user'\nimport { checkIfMarketing } from '../services/RoleService'\nimport { Unauthorized, NotFound, UnprocessableEntity } from '../helpers'\n\nexport const createCokitchenExploreKeyword = async ctx => {\n  const { body } = ctx.request\n  const { role } = ctx.state.user.user\n  if (await checkIfMarketing(role)) {\n    //first check if meal keyword has images as that is required for explore\n    const meal_keyword_data = await MealKeyword.query()\n      .findOne({\n        id: body.meal_keyword_id\n      })\n      .catch(e => {})\n    if (\n      meal_keyword_data.images != null &&\n      meal_keyword_data.images.length > 0\n    ) {\n      // check if cokitchen explore keyword with that data alreadye exists\n      let cokitchen_explore_keyword_data = await CokitchenExploreKeyword.query()\n        .findOne({\n          cokitchen_id: body.cokitchen_id,\n          meal_keyword_id: body.meal_keyword_id\n        })\n        //.withGraphFetched('[cokitchen, meal_keyword]')\n        .catch(e => {\n          console.log(e)\n          return false\n        })\n        if(cokitchen_explore_keyword_data){\n          throw UnprocessableEntity('Invalid body, explore data already exists')\n\n        }\n      cokitchen_explore_keyword_data = await CokitchenExploreKeyword.query()\n        .insert(body)\n        //.withGraphFetched('[cokitchen, meal_keyword]')\n        .catch(e => {\n          console.log(e)\n          throw UnprocessableEntity('Invalid body ' + e)\n        })\n      return {\n        status: 'success',\n        message: 'Cokitchen explore keyword created Successfully',\n        ...cokitchen_explore_keyword_data\n      }\n    } else {\n      throw UnprocessableEntity(\n        'Meal keyword needs to have an image before it can be made a cokitchen explore keyword'\n      )\n    }\n  } else {\n    throw Unauthorized('Unauthorized')\n  }\n}\n\nexport const getCokitchenExploreKeywords = async ctx => {\n  const cokitchen_explore_keywords = await CokitchenExploreKeyword.query()\n    .withGraphFetched('[meal_keyword]')\n    .catch(e => {\n      console.log(e)\n      return []\n    })\n  return {\n    status: 'success',\n    message: 'Cokitchen explore keywords returned Successfully',\n    data: cokitchen_explore_keywords\n  }\n}\n\nexport const deleteCokitchenExploreKeyword = async ctx => {\n  const { params } = ctx\n  const { role } = ctx.state.user.user\n\n  if (await checkIfMarketing(role)) {\n    const cokitchen_explore_keyword_data = await CokitchenExploreKeyword.query()\n      .deleteById(params.id)\n      .catch(() => {\n        throw NotFound('Cokitchen explore keyword not found')\n      })\n    return {\n      status: 'success',\n      message: 'Cokitchen explore keyword Deleted Successfully'\n    }\n  } else {\n    throw Unauthorized('Unauthorized Delete')\n  }\n}\n"],"file":"cokitchen_explore_keyword.controller.js"}