{"version":3,"sources":["../../../src/app/controllers/logistics.controller.js"],"names":["createLogisticsCompany","ctx","body","request","role","state","user","name","LogisticsCompany","query","insert","logistics_company_data","status","message","createLogisticsAdmin","Role","find","logisticsAdminRole","active","role_id","id","password","User","logistics_admin_data","createLogisticsRider","riderRole","rider_data"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAKA;;;;;;AAEO,IAAMA,sBAAsB;AAAA,2FAAG,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5BC,YAAAA,IAD4B,GACnBD,GAAG,CAACE,OADe,CAC5BD,IAD4B;AAE5BE,YAAAA,IAF4B,GAEnBH,GAAG,CAACI,KAAJ,CAAUC,IAFS,CAE5BF,IAF4B;;AAAA,iBAIhC,6CAA2BA,IAAI,CAACG,IAAhC,CAJgC;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAMGC,8BAAiBC,KAAjB,GACpCC,MADoC,CAC7BR,IAD6B,CANH;;AAAA;AAM5BS,YAAAA,sBAN4B;AAAA;AAShCC,cAAAA,MAAM,EAAE,SATwB;AAUhCC,cAAAA,OAAO,EAAE;AAVuB,eAW7BF,sBAX6B;;AAAA;AAAA,kBAc5B,2BAAa,uBAAb,CAd4B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAtBX,sBAAsB;AAAA;AAAA;AAAA,GAA5B;;;;AAkBA,IAAMc,oBAAoB;AAAA,4FAAG,kBAAMb,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACxBC,YAAAA,IADwB,GACfD,GAAG,CAACE,OADW,CACxBD,IADwB;AAExBE,YAAAA,IAFwB,GAEfH,GAAG,CAACI,KAAJ,CAAUC,IAFK,CAExBF,IAFwB;AAAA;AAAA,mBAGCW,iBAAKN,KAAL,GAAaO,IAAb,CAAkB;AAC/CT,cAAAA,IAAI,EAAC;AAD0C,aAAlB,CAHD;;AAAA;AAG1BU,YAAAA,kBAH0B;;AAAA,iBAM5B,6CAA2Bb,IAAI,CAACG,IAAhC,CAN4B;AAAA;AAAA;AAAA;;AAO9BL,YAAAA,IAAI,CAACgB,MAAL,GAAc,KAAd;AACAhB,YAAAA,IAAI,CAACiB,OAAL,GAAeF,kBAAkB,CAACG,EAAlC;AAR8B;AAAA,mBASR,8BAAgBlB,IAAI,CAACmB,QAArB,CATQ;;AAAA;AAS9BnB,YAAAA,IAAI,CAACmB,QATyB;AAAA;AAAA,mBAUKC,iBAAKb,KAAL,GAClCC,MADkC,CAC3BR,IAD2B,CAVL;;AAAA;AAUxBqB,YAAAA,oBAVwB;AAAA;AAa5BX,cAAAA,MAAM,EAAE,SAboB;AAc5BC,cAAAA,OAAO,EAAE;AAdmB,eAezBU,oBAfyB;;AAAA;AAAA,kBAkBxB,2BAAa,uBAAb,CAlBwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAApBT,oBAAoB;AAAA;AAAA;AAAA,GAA1B;;;;AAsBE,IAAMU,oBAAoB;AAAA,4FAAG,kBAAMvB,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAC1BC,YAAAA,IAD0B,GACjBD,GAAG,CAACE,OADa,CAC1BD,IAD0B;AAE1BE,YAAAA,IAF0B,GAEjBH,GAAG,CAACI,KAAJ,CAAUC,IAFO,CAE1BF,IAF0B;AAAA;AAAA,mBAGVW,iBAAKN,KAAL,GAAaO,IAAb,CAAkB;AACtCT,cAAAA,IAAI,EAAC;AADiC,aAAlB,CAHU;;AAAA;AAG5BkB,YAAAA,SAH4B;;AAAA,iBAM9B,wCAAsBrB,IAAI,CAACG,IAA3B,CAN8B;AAAA;AAAA;AAAA;;AAOhCL,YAAAA,IAAI,CAACgB,MAAL,GAAc,KAAd;AAPgC;AAAA,mBAQV,8BAAgBhB,IAAI,CAACmB,QAArB,CARU;;AAAA;AAQhCnB,YAAAA,IAAI,CAACmB,QAR2B;AAShCnB,YAAAA,IAAI,CAACiB,OAAL,GAAeM,SAAS,CAACL,EAAzB;AATgC;AAAA,mBAUPE,iBAAKb,KAAL,GACxBC,MADwB,CACjBR,IADiB,CAVO;;AAAA;AAU1BwB,YAAAA,UAV0B;AAAA;AAa9Bd,cAAAA,MAAM,EAAE,SAbsB;AAc9BC,cAAAA,OAAO,EAAE;AAdqB,eAe3Ba,UAf2B;;AAAA;AAAA,kBAkB1B,2BAAa,uBAAb,CAlB0B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAApBF,oBAAoB;AAAA;AAAA;AAAA,GAA1B","sourcesContent":["import Cokitchen from '../models/cokitchen'\nimport LogisticsCompany from '../models/logistics_company'\nimport User from '../models/user'\nimport Role from '../models/role'\nimport {\n  checkIfAdmin,\n  checkIfLogisticsSuperAdmin,\n  checkIfLogisticsAdmin\n} from '../services/RoleService'\nimport { Unauthorized,encryptPassword } from '../helpers'\n\nexport const createLogisticsCompany = async ctx => {\n  const { body } = ctx.request\n  const { role } = ctx.state.user\n\n  if (checkIfLogisticsSuperAdmin(role.name)) {\n\n    const logistics_company_data = await LogisticsCompany.query()\n    .insert(body)\n    return {\n      status: 'success',\n      message: 'Creation Successful',\n      ...logistics_company_data\n    }\n  } else {\n    throw Unauthorized('Unauthorized Creation')\n  }\n}\n\nexport const createLogisticsAdmin = async ctx => {\n    const { body } = ctx.request\n    const { role } = ctx.state.user\n    const logisticsAdminRole = await Role.query().find({\n        name:'LOGISTICS_ADMIN',\n      });\n    if (checkIfLogisticsSuperAdmin(role.name)) {\n      body.active = false\n      body.role_id = logisticsAdminRole.id\n      body.password = await encryptPassword(body.password)\n      const logistics_admin_data = await User.query()\n      .insert(body)\n      return {\n        status: 'success',\n        message: 'Creation Successful',\n        ...logistics_admin_data\n      }\n    } else {\n      throw Unauthorized('Unauthorized Creation')\n    }\n  }\n\n  export const createLogisticsRider = async ctx => {\n    const { body } = ctx.request\n    const { role } = ctx.state.user\n    const riderRole = await Role.query().find({\n        name:'RIDER',\n      });\n    if (checkIfLogisticsAdmin(role.name)) {\n      body.active = false\n      body.password = await encryptPassword(body.password)\n      body.role_id = riderRole.id\n      const rider_data = await User.query()\n      .insert(body)\n      return {\n        status: 'success',\n        message: 'Creation Successful',\n        ...rider_data\n      }\n    } else {\n      throw Unauthorized('Unauthorized Creation')\n    }\n  }\n\n\n\n"],"file":"logistics.controller.js"}