{"version":3,"sources":["../../../src/app/controllers/logistics.controller.js"],"names":["createLogisticsCompany","ctx","body","request","role","state","user","LogisticsCompany","query","insert","logistics_company_data","status","message","createLogisticsAdmin","Role","findOne","name","logisticsAdminRole","active","role_id","id","password","User","logistics_admin_data","createLogisticsRider","riderRole","rider_data"],"mappings":";;;;;;;;;;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AAKA;;;;;;AAEO,IAAMA,sBAAsB;AAAA,2FAAG,iBAAMC,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAC5BC,YAAAA,IAD4B,GACnBD,GAAG,CAACE,OADe,CAC5BD,IAD4B;AAE5BE,YAAAA,IAF4B,GAEnBH,GAAG,CAACI,KAAJ,CAAUC,IAAV,CAAeA,IAFI,CAE5BF,IAF4B;;AAAA,iBAIhC,6CAA2BA,IAA3B,CAJgC;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAKGG,8BAAiBC,KAAjB,GAAyBC,MAAzB,CAAgCP,IAAhC,CALH;;AAAA;AAK5BQ,YAAAA,sBAL4B;AAAA;AAOhCC,cAAAA,MAAM,EAAE,SAPwB;AAQhCC,cAAAA,OAAO,EAAE;AARuB,eAS7BF,sBAT6B;;AAAA;AAAA,kBAY5B,2BAAa,uBAAb,CAZ4B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAtBV,sBAAsB;AAAA;AAAA;AAAA,GAA5B;;;;AAgBA,IAAMa,oBAAoB;AAAA,4FAAG,kBAAMZ,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAC1BC,YAAAA,IAD0B,GACjBD,GAAG,CAACE,OADa,CAC1BD,IAD0B;AAE1BE,YAAAA,IAF0B,GAEjBH,GAAG,CAACI,KAAJ,CAAUC,IAAV,CAAeA,IAFE,CAE1BF,IAF0B;AAAA;AAAA,mBAGDU,iBAAKN,KAAL,GAAaO,OAAb,CAAqB;AACpDC,cAAAA,IAAI,EAAE;AAD8C,aAArB,CAHC;;AAAA;AAG5BC,YAAAA,kBAH4B;;AAAA,iBAM9B,6CAA2Bb,IAA3B,CAN8B;AAAA;AAAA;AAAA;;AAOhCF,YAAAA,IAAI,CAACgB,MAAL,GAAc,KAAd;AACAhB,YAAAA,IAAI,CAACiB,OAAL,GAAeF,kBAAkB,CAACG,EAAlC;AARgC;AAAA,mBASV,8BAAgBlB,IAAI,CAACmB,QAArB,CATU;;AAAA;AAShCnB,YAAAA,IAAI,CAACmB,QAT2B;AAAA;AAAA,mBAUGC,iBAAKd,KAAL,GAAaC,MAAb,CAAoBP,IAApB,CAVH;;AAAA;AAU1BqB,YAAAA,oBAV0B;AAAA;AAY9BZ,cAAAA,MAAM,EAAE,SAZsB;AAa9BC,cAAAA,OAAO,EAAE;AAbqB,eAc3BW,oBAd2B;;AAAA;AAAA,kBAiB1B,2BAAa,uBAAb,CAjB0B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAApBV,oBAAoB;AAAA;AAAA;AAAA,GAA1B;;;;AAqBA,IAAMW,oBAAoB;AAAA,4FAAG,kBAAMvB,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAC1BC,YAAAA,IAD0B,GACjBD,GAAG,CAACE,OADa,CAC1BD,IAD0B;AAE1BE,YAAAA,IAF0B,GAEjBH,GAAG,CAACI,KAAJ,CAAUC,IAAV,CAAeA,IAFE,CAE1BF,IAF0B;AAAA;AAAA,mBAGVU,iBAAKN,KAAL,GAAaO,OAAb,CAAqB;AAC3CC,cAAAA,IAAI,EAAE;AADqC,aAArB,CAHU;;AAAA;AAG5BS,YAAAA,SAH4B;;AAAA,iBAM9B,wCAAsBrB,IAAtB,CAN8B;AAAA;AAAA;AAAA;;AAOhCF,YAAAA,IAAI,CAACgB,MAAL,GAAc,KAAd;AAPgC;AAAA,mBAQV,8BAAgBhB,IAAI,CAACmB,QAArB,CARU;;AAAA;AAQhCnB,YAAAA,IAAI,CAACmB,QAR2B;AAShCnB,YAAAA,IAAI,CAACiB,OAAL,GAAeM,SAAS,CAACL,EAAzB;AATgC;AAAA,mBAUPE,iBAAKd,KAAL,GAAaC,MAAb,CAAoBP,IAApB,CAVO;;AAAA;AAU1BwB,YAAAA,UAV0B;AAAA;AAY9Bf,cAAAA,MAAM,EAAE,SAZsB;AAa9BC,cAAAA,OAAO,EAAE;AAbqB,eAc3Bc,UAd2B;;AAAA;AAAA,kBAiB1B,2BAAa,uBAAb,CAjB0B;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAApBF,oBAAoB;AAAA;AAAA;AAAA,GAA1B","sourcesContent":["import Cokitchen from '../models/cokitchen'\nimport LogisticsCompany from '../models/logistics_company'\nimport User from '../models/user'\nimport Role from '../models/role'\nimport {\n  checkIfAdmin,\n  checkIfLogisticsSuperAdmin,\n  checkIfLogisticsAdmin\n} from '../services/RoleService'\nimport { Unauthorized, encryptPassword } from '../helpers'\n\nexport const createLogisticsCompany = async ctx => {\n  const { body } = ctx.request\n  const { role } = ctx.state.user.user\n\n  if (checkIfLogisticsSuperAdmin(role)) {\n    const logistics_company_data = await LogisticsCompany.query().insert(body)\n    return {\n      status: 'success',\n      message: 'Creation Successful',\n      ...logistics_company_data\n    }\n  } else {\n    throw Unauthorized('Unauthorized Creation')\n  }\n}\n\nexport const createLogisticsAdmin = async ctx => {\n  const { body } = ctx.request\n  const { role } = ctx.state.user.user\n  const logisticsAdminRole = await Role.query().findOne({\n    name: 'LOGISTICS_ADMIN'\n  })\n  if (checkIfLogisticsSuperAdmin(role)) {\n    body.active = false\n    body.role_id = logisticsAdminRole.id\n    body.password = await encryptPassword(body.password)\n    const logistics_admin_data = await User.query().insert(body)\n    return {\n      status: 'success',\n      message: 'Creation Successful',\n      ...logistics_admin_data\n    }\n  } else {\n    throw Unauthorized('Unauthorized Creation')\n  }\n}\n\nexport const createLogisticsRider = async ctx => {\n  const { body } = ctx.request\n  const { role } = ctx.state.user.user\n  const riderRole = await Role.query().findOne({\n    name: 'RIDER'\n  })\n  if (checkIfLogisticsAdmin(role)) {\n    body.active = false\n    body.password = await encryptPassword(body.password)\n    body.role_id = riderRole.id\n    const rider_data = await User.query().insert(body)\n    return {\n      status: 'success',\n      message: 'Creation Successful',\n      ...rider_data\n    }\n  } else {\n    throw Unauthorized('Unauthorized Creation')\n  }\n}\n"],"file":"logistics.controller.js"}