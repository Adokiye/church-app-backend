{"version":3,"sources":["../../../src/app/controllers/faq.controller.js"],"names":["getFaqArrangement","ctx","user","state","FaqArrangement","query","faq_arrangement_data","status","message","data","faqs","addNewFaq","role","body","request","Faq","insert","faq","push","console","log","JSON","stringify","e","patchAndFetchById","id","updateFaq","faq_id","faq_data","foundIndex","findIndex","updateFaqArrangement","faq_arrangement","deleteFaq","params","deleteById"],"mappings":"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","sourcesContent":["import UserSetting from '../models/user_setting'\nimport UserSavedAddress from '../models/user_saved_address'\nimport FaqArrangement from '../models/faq_arrangement'\nimport Faq from '../models/faq'\nimport { checkIfMarketing } from '../services/RoleService'\n\nimport { Unauthorized, UnprocessableEntity, NotFound } from '../helpers'\n\nexport const getFaqArrangement = async ctx => {\n  const { user } = ctx.state.user\n\n  const faq_arrangement_data = await FaqArrangement.query().catch(() => false)\n  if (!faq_arrangement_data) {\n    return {\n      status: 'success',\n      message: \"Faq's Arrangement data returned Successfully\",\n      data: []\n    }\n  } else {\n    return {\n      status: 'success',\n      message: \"Faq's Arrangement data returned Successfully\",\n      data: faq_arrangement_data[0].faqs\n    }\n  }\n}\n\nexport const addNewFaq = async ctx => {\n  const { role } = ctx.state.user.user\n  const { body } = ctx.request\n  if (await checkIfMarketing(role)) {\n    const faq = await Faq.query().insert(body)\n    let faq_arrangement_data = await FaqArrangement.query().catch(() => false)\n    if (!faq_arrangement_data) {\n      let faqs = []\n      faqs.push(faq)\n      console.log(faq)\n      faq_arrangement_data = await FaqArrangement.query().insert({\n        faqs: JSON.stringify(faqs)\n      }).catch((e)=>{console.log(e);throw UnprocessableEntity('invalid data')})\n      return {\n        status: 'success',\n        message: \"Faq's Arrangement data returned Successfully\",\n        data: faq_arrangement_data.faqs\n      }\n    } else {\n      console.log(faq_arrangement_data[0])\n      faq_arrangement_data[0].faqs.push(faq)\n      faq_arrangement_data[0].faqs = JSON.stringify(faq_arrangement_data[0].faqs)\n      faq_arrangement_data = await FaqArrangement.query().patchAndFetchById(\n        faq_arrangement_data[0].id,\n        faq_arrangement_data[0]\n      )\n      return {\n        status: 'success',\n        message: 'Faq data added Successfully',\n        data: faq_arrangement_data.faqs\n      }\n    }\n  } else {\n    throw Unauthorized('Unauthorized Creation')\n  }\n}\n\nexport const updateFaq = async ctx => {\n  const { role } = ctx.state.user.user\n  const { body } = ctx.request\n  if (await checkIfMarketing(role)) {\n    const faq_id = body.faq_id\n    delete body.faq_id\n    const faq_data = await Faq.query()\n      .patchAndFetchById(faq_id, body)\n      .catch(e => {\n        console.log(e)\n        return false\n      })\n    if (!faq_data) {\n      throw NotFound('Faq data not found.')\n    } else {\n      let faq_arrangement_data = await FaqArrangement.query().catch(() => false)\n      let foundIndex = faq_arrangement_data[0].faqs.findIndex(\n        faq => faq.id == faq_id\n      )\n      faq_arrangement_data[0].faqs[foundIndex] = faq_data\n      faq_arrangement_data[0].faqs = JSON.stringify(faq_arrangement_data[0].faqs)\n\n      faq_arrangement_data = await FaqArrangement.query().patchAndFetchById(\n        faq_arrangement_data[0].id,\n        faq_arrangement_data[0]\n      )\n      return {\n        status: 'success',\n        message: 'Faq updated Successfully',\n        ...faq_data\n      }\n    }\n  } else {\n    throw Unauthorized('Unauthorized Update')\n  }\n}\n\nexport const updateFaqArrangement = async ctx => {\n  const { role } = ctx.state.user.user\n  const { body } = ctx.request\n  if (await checkIfMarketing(role)) {\n    const faq_arrangement = body.faq_arrangement\n    let faq_arrangement_data = await FaqArrangement.query().catch(() => false)\n    faq_arrangement_data[0].faqs = faq_arrangement\n    faq_arrangement_data[0].faqs = JSON.stringify(faq_arrangement_data[0].faqs)\n\n    faq_arrangement_data = await FaqArrangement.query().patchAndFetchById(\n      faq_arrangement_data[0].id,\n      faq_arrangement_data[0]\n    )\n    return {\n      status: 'success',\n      message: 'Faq updated Successfully',\n      data:faq_arrangement_data.faqs\n    }\n  } else {\n    throw Unauthorized('Unauthorized Update')\n  }\n}\n\nexport const deleteFaq = async ctx => {\n  const { role} = ctx.state.user.user\n  const { params } = ctx\n  if (await checkIfMarketing(role)) {\n    const faq_data = await Faq.query()\n      .deleteById(params.id)\n      .catch(() => {\n        throw NotFound('Faq with id ' + params.id + ' not found')\n      })\n    let faq_arrangement_data = await FaqArrangement.query().catch(() => [])\n    let foundIndex = faq_arrangement_data[0].faqs.findIndex(\n      faq => faq.id == params.id\n    )\n    delete faq_arrangement_data[0].faqs[foundIndex]\n    faq_arrangement_data[0].faqs = JSON.stringify(faq_arrangement_data[0].faqs)\n\n    faq_arrangement_data = await FaqArrangement.query().patchAndFetchById(\n      faq_arrangement_data[0].id,\n      faq_arrangement_data[0]\n    )\n\n    return {\n      status: 'success',\n      message: 'Faq Deleted Successfully'\n    }\n  } else {\n    throw Unauthorized('Unauthorized Delete')\n  }\n}\n"],"file":"faq.controller.js"}